% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_opls.R
\name{step_opls_denoise}
\alias{step_opls_denoise}
\alias{tidy.step_opls_denoise}
\title{Applies OPLS noise filtering on numeric data}
\usage{
step_opls_denoise(
  recipe,
  ...,
  role = NA,
  trained = FALSE,
  outcome = NULL,
  Wortho = NULL,
  Portho = NULL,
  skip = FALSE,
  id = rand_id("opls_denoise")
)

\method{tidy}{step_opls_denoise}(x, ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose which
variables are affected by the step. See \code{\link[=selections]{selections()}}
for more details. For the \code{tidy} method, these are not
currently used.}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{outcome}{When a single outcome is available, character
string or call to \code{\link[dplyr:vars]{dplyr::vars()}} can be used to specify a single outcome
variable.}

\item{Wortho}{A vector a weights for the first orthogonal component. This is
\code{NULL} until computed by \code{\link[=prep.recipe]{prep.recipe()}}.}

\item{Portho}{A vector of loadings for the first orthogonal component. This is
\code{NULL} until computed by \code{\link[=prep.recipe]{prep.recipe()}}.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[=bake.recipe]{bake.recipe()}}? While all operations are baked
when \code{\link[=prep.recipe]{prep.recipe()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations}

\item{id}{A character string that is unique to this step to identify it.}

\item{x}{A \code{step_opls_denoise} object.}
}
\value{
An updated version of \code{recipe} with the new step
added to the sequence of existing steps (if any). For the
\code{tidy} method, a tibble with columns \code{terms} (the
selectors or variables selected), \code{value} (the
standard deviations and means), and \code{statistic} for the type of value.
}
\description{
\code{step_opls_denoise} creates a 'specification' of a recipe
step that will filter the first orthogonal component of the OPLS
transfomation on the columns.
}
\details{
Orthogonal Projection to Latent Structurees (OPLS) allows the separation
of the predictor variations that are correlated and orthogonal to the response.
This allows to remove systematic variation that are not correlated to the response.

OPLS calculation uses the implementation of the R package:
\url{https://bioconductor.org/packages/release/bioc/html/ropls.html}
}
\examples{
library(ropls)
library(tidymodels)
library(tidySpectR)

data(sacurine)
attach(sacurine)

genderFc <- sampleMetadata[, "gender"]

urinedata <- dataMatrix \%>\% 
   cbind(genderFc) \%>\% 
   as_tibble() \%>\% 
   add_column(id = rownames(dataMatrix), .before = 1) \%>\%
   select(-id)

rec <- recipe(urinedata, genderFc ~.) \%>\%
     step_normalize(all_predictors()) \%>\%
     step_opls_denoise(all_predictors(), outcome = "genderFc") 
tidy(rec)
rec \%>\% prep() \%>\% bake(NULL)
}
\references{
Trygg, J., & Wold, S. (2002). Orthogonal projections to latent structures
(O-PLS). Journal of Chemometrics, 16(3), 119–128. doi:10.1002/cem.695
\url{https://onlinelibrary.wiley.com/doi/abs/10.1002/cem.695}

Thévenot, E. A., Roux, A., Xu, Y., Ezan, E., & Junot, C. (2015). Analysis
of the Human Adult Urinary Metabolome Variations with Age, Body Mass Index,
and Gender by Implementing a Comprehensive Workflow for Univariate and OPLS
Statistical Analyses. Journal of Proteome Research, 14(8), 3322–3335.
doi:10.1021/acs.jproteome.5b00354 
\url{https://pubs.acs.org/doi/10.1021/acs.jproteome.5b00354}
}
